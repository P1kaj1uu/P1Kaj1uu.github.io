<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>事件委托和排他思想</title>
      <link href="/2022/05/21/shi-jian-wei-tuo-he-pai-ta-si-xiang/"/>
      <url>/2022/05/21/shi-jian-wei-tuo-he-pai-ta-si-xiang/</url>
      
        <content type="html"><![CDATA[<h4 id="一、事件委派"><a href="#一、事件委派" class="headerlink" title="一、事件委派"></a>一、事件委派</h4><h5 id="1-理解DOM事件流"><a href="#1-理解DOM事件流" class="headerlink" title="1.理解DOM事件流"></a>1.理解DOM事件流</h5><ul><li><p>事件流描述的是从页面中接收事件的顺序。事件发生时会在元素节点之间按照特定的顺序传播，这个传播过程即DOM事件流。</p></li><li><p>DOM事件流分为三个阶段：</p><ul><li>捕获阶段：从上往下</li><li>当前目标阶段</li><li><strong>冒泡阶段</strong>：从下往上</li></ul></li><li><p>事件流如下图所示：</p><img src="/2022/05/21/shi-jian-wei-tuo-he-pai-ta-si-xiang/事件流.png" style="zoom:60%;"></li><li><p>注意事项：</p><ul><li>JavaScript代码中只能执行捕获或者冒泡其中的一个阶段。</li><li>addEventListener(type, listener[, useCapture])第三个参数如果是true，表示在事件捕获阶段调用事件处理程序；如果是false(不写默认就是false)，表示在事件冒泡阶段调用事件处理程序。</li><li>其中有些事件是没有冒泡的，比如onblur、onfocus、onmouseenter、onmouseleave。</li></ul></li></ul><h5 id="2-掌握事件委托"><a href="#2-掌握事件委托" class="headerlink" title="2.掌握事件委托"></a>2.掌握事件委托</h5><ul><li>概念：事件委托也称为事件代理，在jQuery中称为事件委派。</li><li>事件委托的作用：只操作了一次DOM，提高了程序的性能。</li><li>事件委托的优点包括：可以大量节省内存占用，减少事件注册，比如在ul上代理所有li的click事件；实现动态绑定事件。</li><li><strong>事件委托的原理</strong>：不是每个子节点单独设置事件监听器，而是事件监听器设置在其父节点上，然后利用冒泡原理影响设置每个子节点。</li></ul><h4 id="二、排他思想"><a href="#二、排他思想" class="headerlink" title="二、排他思想"></a>二、排他思想</h4><ul><li><p>应用：如果有同一组元素，我们想要某一个元素实现某种样式，需要用到循环的排他思想。</p></li><li><p><strong>排他思想原理</strong>：(1)先所有元素全部清除样式，即干掉其他人；(2)再给当前元素设置样式，即留下自己。</p></li><li><p><em>场景一</em>：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 需求：点击哪个按钮，让当前按钮变为粉色，其余不变色</span><span class="token operator">&lt;</span>button<span class="token operator">&gt;</span>按钮<span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button<span class="token operator">&gt;</span>按钮<span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button<span class="token operator">&gt;</span>按钮<span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button<span class="token operator">&gt;</span>按钮<span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button<span class="token operator">&gt;</span>按钮<span class="token number">5</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token comment">// 获取所有按钮元素</span>    <span class="token keyword">let</span> btns <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> btns<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 绑定点击事件</span>        btns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addaddEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> btns<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">// 干掉其他人</span>                btns<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">''</span>            <span class="token punctuation">}</span>            <span class="token comment">// 留下自己</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'pink'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><em>场景二</em>：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 需求：Tab栏切换时，只有选中项的背景颜色为粉色。默认第一项被选中其背景颜色为粉色，其余项无背景颜色。</span><span class="token comment">// 被选中的tab栏样式</span><span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">&gt;</span><span class="token punctuation">.</span>active <span class="token punctuation">{</span>        background<span class="token operator">-</span>color<span class="token operator">:</span> pink<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">&lt;</span>style<span class="token operator">&gt;</span><span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"active"</span><span class="token operator">&gt;</span>Tab1<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>Tab2<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>Tab3<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>Tab4<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token comment">// 获取所有的li标签元素</span>    <span class="token keyword">let</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// 绑定点击事件</span>        lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addaddEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// 移除当前类</span>            document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'ul .active'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>            <span class="token comment">// 为点击的添加类</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>节流与防抖</title>
      <link href="/2022/05/20/jie-liu-yu-fang-dou/"/>
      <url>/2022/05/20/jie-liu-yu-fang-dou/</url>
      
        <content type="html"><![CDATA[<h4 id="一、节流"><a href="#一、节流" class="headerlink" title="一、节流"></a>一、节流</h4><ul><li><p>概念：在规定的间隔时间范围内不会重复触发回调，只有大于这个时间间隔才会触发回调，把频繁触发变为少量触发。</p></li><li><p>类似于技能CD。</p></li><li><p>应用：点击按钮，轮播图点击左右箭头。</p></li><li><p>插件lodash.js，它里面封装了函数的防抖与节流业务。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>计数器：<span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button<span class="token operator">&gt;</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token comment">// 获取元素</span><span class="token keyword">let</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token comment">// 控制节流阀是否开启或关闭</span><span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment">// 需求：在一秒以内，不管点击按钮多少次，计数器数值只能+1</span>btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>        flag <span class="token operator">=</span> <span class="token boolean">false</span>        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        count<span class="token operator">++</span>    span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> count        flag <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="二、防抖"><a href="#二、防抖" class="headerlink" title="二、防抖"></a>二、防抖</h4><ul><li><p>概念：前面的所有的触发都被取消，最后一次执行在规定的时间之后才会触发，也就是说如果连续快速的触发，只会执行一次。</p></li><li><p>类似于LOL回城被打断。</p></li><li><p>应用：输入框搜索。</p></li><li><p>插件lodash.js，它里面封装了函数的防抖与节流业务。</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;input type="text" @input="inputFn" /&gt;data () {return {timer: null}},methods: {inputFn () {if (this.timer) {clearTimeout(this.timer)}this.timer = setTimeout(() =&gt; {// 发送网络请求}, 3000)}}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 性能优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2022/03/21/hello-world/"/>
      <url>/2022/03/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>这是测试！！！<br>这是测试！！！<br>这是测试！！！  </p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
